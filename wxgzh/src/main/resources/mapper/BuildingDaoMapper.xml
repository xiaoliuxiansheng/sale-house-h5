<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wxgzh.building.dao.BuildingDao">
	<resultMap type="BuildingEntity" id="result">
		<id column="pk_builiding" property="pkBuiliding"/>
		<result column="name" property="name"/>
		<result column="price" property="price"/>
		<result column="city" property="city"/>
		<result column="region" property="region"/>
		<result column="address" property="address"/>
		<result column="daddress" property="daddress"/>
		<result column="managecost" property="managecost"/>
		<result column="floors" property="floors"/>
		<result column="height" property="height"/>
		<result column="parkspace" property="parkspace"/>
		<result column="elevatorbrand" property="elevatorbrand"/>
		<result column="elevatorcount" property="elevatorcount"/>
		<result column="area" property="area"/>
		<result column="airconditioning" property="airconditioning"/>
		<result column="developer" property="developer"/>
		<result column="company" property="company"/>
		<result column="introduce" property="introduce"/>
		<result column="typeimg" property="typeimg"/>
		<result column="buildingimg" property="buildingimg"/>
		<result column="lon" property="lon"/>
		<result column="lat" property="lat"/>
	</resultMap>


	<insert id="insert">
		insert into wx_builiding(pk_builiding,name,city,region,address,daddress,managecost,floors,height,parkspace,elevatorbrand,elevatorcount,area,airconditioning,developer,company,introduce,typeimg,buildingimg,lon,lat)
		values('${pkBuiliding}','${name}','${city}','${region}','${address}','${daddress}','${managecost}','${floors}','${height}','${parkspace}','${elevatorbrand}','${elevatorcount}','${area}','${airconditioning}','${developer}','${company}','${introduce}','${typeimg}','${buildingimg}',${lon},${lat})
	</insert>

	<delete id="delete" parameterType="String">
		delete from wx_builiding where pk_builiding = #{id}
	</delete>

	<!-- 是否存在数据 -->
	<select id="exists" resultType="int">
		select count(${column}) from wx_builiding
		where ${column} = #{value}
	</select>

	<!--根据id查询-->
	<select id="selectById" parameterType="String" resultMap="result">
		select * from wx_builiding
		where pk_builiding = #{id}
	</select>

	<update id="update">
		update wx_builiding
		<trim prefix="set" suffixOverrides=",">
			<if test="map.name != null">
				name = #{map.name},
			</if>
			<if test="map.city != null">
				city = #{map.city},
			</if>
			<if test="map.region != null">
				region = #{map.region},
			</if>
			<if test="map.address != null">
				address = #{map.address},
			</if>
			<if test="map.daddress != null">
				daddress = #{map.daddress},
			</if>
			<if test="map.managecost != null">
				managecost = #{map.managecost},
			</if>
			<if test="map.floors != null">
				floors = #{map.floors},
			</if>
			<if test="map.height != null">
				height = #{map.height},
			</if>
			<if test="map.parkspace != null">
				parkspace = #{map.parkspace},
			</if>
			<if test="map.elevatorbrand != null">
				elevatorbrand = #{map.elevatorbrand},
			</if>
			<if test="map.elevatorcount != null">
				elevatorcount = #{map.elevatorcount},
			</if>
			<if test="map.elevatorcount != null">
				elevatorcount = #{map.elevatorcount},
			</if>
			<if test="map.area != null">
				area = #{map.area},
			</if>
			<if test="map.airconditioning != null">
				airconditioning = #{map.airconditioning},
			</if>
			<if test="map.developer != null">
				developer = #{map.developer},
			</if>
			<if test="map.company != null">
				company = #{map.company},
			</if>
			<if test="map.introduce != null">
				introduce = #{map.introduce},
			</if>
			<if test="map.typeimg != null">
				typeimg = #{map.typeimg},
			</if>
			<if test="map.buildingimg != null">
				buildingimg = #{map.buildingimg},
			</if>
			<if test="map.lon != null">
				lon = #{map.lon},
			</if>
			<if test="map.lat != null">
				lat = #{map.lat},
			</if>
		</trim>
		where pk_builiding = #{id}
	</update>

	<select id="selectRegion" resultType="java.lang.String">
		select region
		from wx_builiding group by region
	</select>
	<select id="selectByKey" resultMap="result" useCache="false">
		select * from wx_builiding
	</select>

</mapper>